{"version":3,"sources":["core/useBaseApi.js","core/useApi.js","components/EditingTableInBooking.js","components/EditingTableForVechicle.js","components/BookingPage.js"],"names":["useBaseApi","useState","inProgress","setInProgress","result","useRef","invoke","endPoint","method","data","Promise","resolve","reject","a","requestBody","JSON","stringify","window","silentFetch","body","response","json","current","console","log","useApi","props","base","service","EditableContext","React","createContext","EditableRow","index","Form","useForm","form","component","Provider","value","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","useContext","useEffect","focus","toggleEdit","setFieldsValue","save","validateFields","values","childNode","Item","style","margin","name","rules","required","message","ref","onPressEnter","onBlur","className","paddingRight","onClick","EditingTableInBooking","handleDelete","key","dataSource","state","setState","filter","item","handleAdd","count","newData","commodity","weight","row","findIndex","splice","getTableData","columns","width","render","_","length","onConfirm","DeleteOutlined","prevProps","prevState","rowData","this","components","cell","map","col","onCell","type","marginBottom","rowClassName","bordered","pagination","Component","EditingTableForVechicle","vehicle_no","from_loc","to_loc","material","party_name","rate","scale","total_amount","expences","driver_name","profit","overflowX","Option","Select","BookingPage","containerRef","api","tableData","setTableData","vehicleTableData","setVehicleTableData","matchMedia","matches","padding","handleSubmit","bookingDetails","delivery_date","Date","toLocaleDateString","date","items","vehicle_details","status","resetFields","alert","updateFinalRate","getFieldValue","ratePerKg","parseFloat","serviceTax","tax","totalWeight","total_weight","totalPrice","finalPrice","fontSize","paddingTop","onFinish","xl","span","placeholder","prefix","MailOutlined","maxLength","MobileOutlined","UserOutlined","calcTotalWeight","list","parseInt","initialValue","disabled","onChange","moment","format","disabledDate","now","suffix","PercentageOutlined","gutter","danger","htmlType"],"mappings":"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","file":"static/js/8.c09014c9.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\n// import CustomToast from \"../components/CustomToast\";\r\nimport silentFetch from \"./silentFetch\";\r\n\r\nconst useBaseApi = () => {\r\n  const [inProgress, setInProgress] = useState(false);\r\n  let result = useRef();\r\n  // let toast = CustomToast();\r\n  // const parseGenericRespone = (response) => {\r\n  //   switch (response.messageType) {\r\n  //     case \"WARNING\":\r\n  //       toast.toast(\"WARNING\", response.message);\r\n  //       return true;\r\n\r\n  //     case \"SUCCESS\":\r\n  //       toast.toast(\"SUCCESS\", response.message);\r\n  //       return true;\r\n\r\n  //     case \"ERROR\":\r\n  //       toast.toast(\"ERROR\", response.message);\r\n  //       return true;\r\n\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // };\r\n  let invoke = (endPoint, method, data) => {\r\n    setInProgress(true);\r\n    return new Promise(async (resolve, reject) => {\r\n      let requestBody = null;\r\n      if (endPoint && method && data) {\r\n        requestBody = JSON.stringify({\r\n          data:data,\r\n        });\r\n      }\r\n      try {\r\n        let response = await window.silentFetch(endPoint, {\r\n          method: method || \"POST\",\r\n          body: requestBody,\r\n        });\r\n        result.current = await response.json();\r\n        // let toResolve = result.current;\r\n        resolve(result.current);\r\n        // if (toResolve) {\r\n        //   resolve(result.current);\r\n        // } else {\r\n        //   reject(result?.code);\r\n        // }\r\n        setInProgress(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  return {\r\n    invoke,\r\n    result: result.current,\r\n    inProgress,\r\n  };\r\n};\r\n\r\nexport default useBaseApi;\r\n","import React from \"react\";\r\nimport useBaseApi from \"./useBaseApi\";\r\n\r\nconst useApi = (props) => {\r\n  let base = useBaseApi();\r\n  let invoke = (service) => {\r\n    let { endPoint, method, data } = service;\r\n    return base.invoke(endPoint, method, data);\r\n  };\r\n  return {\r\n    invoke,\r\n    inProgress: base.inProgress,\r\n  };\r\n};\r\n\r\nexport default useApi;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditingTableInBooking extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"* Commodity\",\r\n        dataIndex: \"commodity\",\r\n        width: \"50%\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"* Weight in KGs\",\r\n        width: \"50%\",\r\n        dataIndex: \"weight\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <DeleteOutlined />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      JSON.stringify(prevProps.rowData) !== JSON.stringify(this.props.rowData)\r\n    ) {\r\n      this.setState({\r\n        dataSource: this.props.rowData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      commodity: `0`,\r\n      weight: \"0\",\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState(\r\n      {\r\n        dataSource: newData,\r\n      },\r\n      () => this.props.getTableData(this.state.dataSource)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          type=\"primary\"\r\n          style={{\r\n            marginBottom: 16,\r\n          }}\r\n        >\r\n          Add a row\r\n        </Button>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditingTableInBooking;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditingTableForVechicle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"* Vehicle No\",\r\n        dataIndex: \"vehicle_no\",\r\n        editable: true,\r\n        width:\"50%\"\r\n      },\r\n      {\r\n        title: \"* From\",\r\n        dataIndex: \"from_loc\",\r\n        editable: true,\r\n        width:\"50%\"\r\n      },\r\n      {\r\n        title: \"* To\",\r\n        dataIndex: \"to_loc\",\r\n        editable: true,\r\n        width:\"50%\"\r\n      },\r\n      {\r\n        title: \"* Material\",\r\n        dataIndex: \"material\",\r\n        editable: true,\r\n        width:\"50%\"\r\n      },\r\n      {\r\n        title: \"* Party Name\",\r\n        dataIndex: \"party_name\",\r\n        editable: true,\r\n        width:\"50%\"\r\n      },\r\n      {\r\n        title: \"* Rate\",\r\n        dataIndex: \"rate\",\r\n        editable: true,\r\n        width:\"50%\"\r\n      },\r\n      {\r\n        title: \"* Scale\",\r\n        dataIndex: \"scale\",\r\n        editable: true,\r\n        width:\"50%\"\r\n      },\r\n      {\r\n        title: \"* Tot Amt\",\r\n        dataIndex: \"total_amount\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"* Expences\",\r\n        dataIndex: \"expences\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"* Driver Name\",\r\n        dataIndex: \"driver_name\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"* Profit\",\r\n        dataIndex: \"profit\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <DeleteOutlined />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      JSON.stringify(prevProps.rowData) !== JSON.stringify(this.props.rowData)\r\n    ) {\r\n      this.setState({\r\n        dataSource: this.props.rowData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      vehicle_no: \"0\",\r\n      from_loc: \"0\",\r\n      to_loc: \"0\",\r\n      material: \"0\",\r\n      party_name: \"0\",\r\n      rate: \"0\",\r\n      scale: \"0\",\r\n      total_amount: \"0\",\r\n      expences: \"0\",\r\n      driver_name: \"0\",\r\n      profit: \"0\",\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState(\r\n      {\r\n        dataSource: newData,\r\n      },\r\n      () => this.props.getTableData(this.state.dataSource)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div style={{ width: \"100%\",overflowX:\"scroll\" }}>\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          type=\"primary\"\r\n          style={{\r\n            marginBottom: 16,\r\n          }}\r\n        >\r\n          Add a row\r\n        </Button>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditingTableForVechicle;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, DatePicker, Form, Input, Row, Select } from \"antd\";\r\nimport {\r\n  MailOutlined,\r\n  MobileOutlined,\r\n  UserOutlined,\r\n  PercentageOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport EditingTableInBooking from \"./EditingTableInBooking\";\r\nimport EditingTableForVechicle from \"./EditingTableForVechicle\";\r\nimport useApi from \"src/core/useApi\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst BookingPage = (props) => {\r\n  const [form] = Form.useForm();\r\n  let containerRef = useRef();\r\n  let api=useApi();\r\n  const [tableData, setTableData] = useState([]);\r\n  const [vehicleTableData, setVehicleTableData] = useState([]);\r\n  useEffect(() => {\r\n    let lgScreen = window.matchMedia(\"(min-width: 768px)\").matches;\r\n    if (lgScreen) {\r\n      containerRef.current.style.padding = \"20px 60px\";\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit =async (value) => {\r\n    let bookingDetails={...value,delivery_date:new Date(value.delivery_date).toLocaleDateString(),date:new Date(value.date).toLocaleDateString(),items:JSON.stringify(tableData),vehicle_details:JSON.stringify(vehicleTableData)}\r\n    let response=await api.invoke({endPoint:\"https://svt-logictics.herokuapp.com/api/addBooking\",method:\"post\",data:bookingDetails});\r\n    if(response.status===1){\r\n      form.resetFields();\r\n      setTableData([]);\r\n      setVehicleTableData([]);\r\n    }else{\r\n      alert('Something Went Wroung You Booking Couldn`t able to create!');\r\n    }\r\n\r\n    console.log(\"called\", response);\r\n\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    if (data.length > 0) {\r\n      let calcTotalWeight = 0;\r\n      data.map((list) => {\r\n        calcTotalWeight = calcTotalWeight + parseInt(list.weight);\r\n      });\r\n      setTableData(data);\r\n      form.setFieldsValue({\r\n        total_weight: calcTotalWeight,\r\n      });\r\n      updateFinalRate();\r\n    }\r\n  };\r\n\r\n  const getTableDataForVehicle = (data) => {\r\n    setVehicleTableData(data);\r\n  };\r\n\r\n  const updateFinalRate = () => {\r\n    let value = form.getFieldValue();\r\n    let ratePerKg = parseFloat(value.rate);\r\n    let serviceTax = parseFloat(value.tax);\r\n    let totalWeight = parseFloat(value.total_weight);\r\n    let totalPrice = ratePerKg * totalWeight;\r\n    let taxRate = (totalPrice * serviceTax) / 100;\r\n    let finalPrice = totalPrice + taxRate;\r\n    if (ratePerKg && totalWeight)\r\n      form.setFieldsValue({\r\n        total_amount: parseFloat(finalPrice) ? finalPrice : 0,\r\n      });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    form.resetFields();\r\n    setTableData([]);\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ padding: \"20px 10px\" }}>\r\n      <Row>\r\n        <p style={{ fontSize: \"calc(10px + 1vmin)\" }}>Booking</p>\r\n      </Row>\r\n      <hr />\r\n      <Form style={{ paddingTop: 20 }} form={form} onFinish={handleSubmit}>\r\n        <Row>\r\n          <Col xl={12}>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Select Coustmer Type *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"customer_type\"\r\n                  rules={[\r\n                    { required: true, message: \"Please select customer type!\" },\r\n                  ]}\r\n                >\r\n                  <Select placeholder=\"Select\">\r\n                    <Option value=\"Accounted Coustmer\">\r\n                      Accounted Coustmer\r\n                    </Option>\r\n                    <Option value=\"Walkin Coustmer\">Walkin Coustmer</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p style={{ fontSize: \"calc(10px + 1vmin)\" }}>Sender Details..</p>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Email *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"sender_email\"\r\n                  rules={[\r\n                    { type: \"email\", message: \"Please Enter Valid Mail\" },\r\n                    { required: true, message: \"Please enter your mail!\" },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Email\" prefix={<MailOutlined />} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Mobile Number *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"sender_mobile\"\r\n                  rules={[\r\n                    { required: true, message: \"Please enter your number!\" },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Mobile Number\"\r\n                    maxLength={10}\r\n                    prefix={<MobileOutlined />}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Origin *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"sender_origin\"\r\n                  rules={[\r\n                    { required: true, message: \"Please enter your origin!\" },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Origin\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Origin Service Location *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"originServiceLocation\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your origin service location!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Origin Service Location\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p style={{ fontSize: \"calc(10px + 1vmin)\" }}>\r\n                Receiver Details..\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Name *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"receiver_name\"\r\n                  rules={[\r\n                    { required: true, message: \"Please enter your name!\" },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Name\" prefix={<UserOutlined />} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Email *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"receiver_email\"\r\n                  rules={[\r\n                    { type: \"email\", message: \"Please Enter Valid Mail\" },\r\n                    { required: true, message: \"Please enter your mail!\" },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Email\" prefix={<MailOutlined />} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Mobile Number *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"receiver_mobile\"\r\n                  rules={[\r\n                    { required: true, message: \"Please enter your number!\" },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Mobile Number\"\r\n                    maxLength={10}\r\n                    prefix={<MobileOutlined />}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Address *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n               \r\n                <Form.Item\r\n                  name=\"receiver_address\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter receiver address\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <TextArea placeholder=\"Receiver Address\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xl={12}>\r\n            <Row>\r\n              <EditingTableInBooking\r\n                getTableData={getTableData}\r\n                rowData={tableData}\r\n              />\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Total Weight *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"total_weight\"\r\n                  rules={[\r\n                    { required: true, message: \"Please enter total weight!\" },\r\n                  ]}\r\n                  initialValue={0}\r\n                >\r\n                  <Input placeholder=\"Total Weight\" disabled />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Rate/KG *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"rate\"\r\n                  rules={[{ required: true, message: \"Please enter rate/kg!\" }]}\r\n                >\r\n                  <Input placeholder=\"Rate/Kg\" onChange={updateFinalRate} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Date *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"date\"\r\n                  rules={[{ required: true, message: \"Please select date!\" }]}\r\n                  initialValue={moment()}\r\n                >\r\n                  <DatePicker\r\n                    disabled\r\n                    style={{ width: \"100%\" }}\r\n                    format=\"DD/MM/YYYY\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Expected Delivery Date *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"delivery_date\"\r\n                  rules={[\r\n                    { required: true, message: \"Please select expected date!\" },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    style={{ width: \"100%\" }}\r\n                    format=\"DD/MM/YYYY\"\r\n                    disabledDate={(current) => {\r\n                      return (\r\n                        current &&\r\n                        current < new Date(Date.now() - 24 * 60 * 60 * 1000)\r\n                      );\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Service Tax *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"tax\"\r\n                  rules={[\r\n                    { required: true, message: \"Please enter service tax!\" },\r\n                  ]}\r\n                  initialValue={\"12.5\"}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Service Tax\"\r\n                    suffix={<PercentageOutlined />}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>Final Total Amount *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"total_amount\"\r\n                  rules={[{ required: true, message: \"Please enter Freight!\" }]}\r\n                >\r\n                  <Input placeholder=\"Freight\" />\r\n                </Form.Item>\r\n              </Col>\r\n              \r\n            </Row>\r\n            <Row>\r\n              <Col span={11}>\r\n                <label>GST *</label>\r\n              </Col>\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  name=\"gst_type\"\r\n                  rules={[{ required: true, message: \"Please enter Freight!\" }]}\r\n                >\r\n                  <Select placeholder=\"Select\">\r\n                    <Option value=\"With Tax\">\r\n                      With Tax\r\n                    </Option>\r\n                    <Option value=\"Without Tax\">Without Tax</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              \r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <EditingTableForVechicle\r\n          getTableData={getTableDataForVehicle}\r\n          rowData={vehicleTableData}\r\n        />\r\n        <hr />\r\n        <Row gutter={16}>\r\n          <Col>\r\n            <Form.Item>\r\n              <Button type={\"primary\"} danger htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n"],"sourceRoot":""}